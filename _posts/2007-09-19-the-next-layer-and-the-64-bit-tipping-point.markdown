---
layout: post
title: The next layer, and the 64-bit tipping point.
date: 2007-09-19 13:11:23.000000000 +01:00
---
<a href="https://www.catb.org/~esr/writings/world-domination/world-domination-201.html">2008</a> is a hard deadline for the adoption of 64-bit computing, according to Eric S. Raymond (author of <a href="https://www.catb.org/~esr/writings/cathedral-bazaar/">The Cathedral and the Bazaar</a>). He made this claim in 2006 based on historical trends of memory use by personal computers. As far as I know, there is no reason why this could not be come to pass - next year you will be buying a 64-bit processor and more than 4GB of RAM in your personal computer.

It's never been easy to predict in advance what triggers the need for this extra horsepower, but in the past it has been the addition of layers of software underneath whatever programming language that software developers were using. If you're writing in assembler for a particular processor then you can squeeze a lot of functionality and performance into quite a small space, but your application won't run on anybody else's processor and won't be able to use a wide range of peripherals. When you start to abstract those incompatibilities away, that's what starts to slow down your application and make it consume lots of memory.

What's the next layer of abstraction that will push us over into the 64-bit world? Joel Spolsky thinks he has identified it: in his <a href="https://www.joelonsoftware.com/items/2007/09/18.html">Strategy Letter VI</a> he writes about a hypothetical application platform that will let you forget about the incompatibilities between different browsers' interpretation of <a href="https://en.wikipedia.org/wiki/CSS">Cascading Style Sheets</a> and their different <a href="https://en.wikipedia.org/wiki/Document_Object_Model">object models</a>. Moreover it will let you forget about different ways of publishing your online status and journal (Facebook or Twitter? Who cares? I publish to all of them).

For me, it's one of those eye-opening articles that makes the world seem like a slightly different place. GMail is today's Wordperfect? Obvious when you think about it.
<blockquote><em>And while you’re not paying attention, everybody starts writing NewSDK apps, and they’re really good, and suddenly businesses ONLY want NewSDK apps, and all those old-school Plain Ajax apps look pathetic and won’t cut and paste and mash and sync and play drums nicely with one another. And Gmail becomes a legacy. The WordPerfect of Email. And you’ll tell your children how excited you were to get 2GB to store email, and they’ll laugh at you. Their <strong>nail polish</strong> has more than 2GB.</em></blockquote>
Somebody must be working on this application platform, surely? Any ideas who? And when can I play with it?
