<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="https://www.w3.org/2005/Atom">
 <title>Your Title - featured</title>
 <link href="https://example.com/tag/featured/index.xml" rel="self"/>
 <link href="https://example.com/tag/featured.html"/>
 <updated>2016-12-05T13:31:33+00:00</updated>
 <id>https://example.com/tag/featured.html</id>
 <author>
   <name>Author Here</name>
 </author>
 
 <entry>
   <title>In which I tell you my password for this website</title>
   <link href="https://example.com/in-which-i-tell-you-my-password-for-this-website/"/>
   <updated>2012-08-21T16:22:19+01:00</updated>
   <id>https://example.com/in-which-i-tell-you-my-password-for-this-website</id>
   <content type="html">&lt;p&gt;I exaggerate. I’m not really going to tell you my password but I am going to tell you roughly how I created it. You may find it useful when thinking about your own passwords.&lt;/p&gt;

&lt;p&gt;Over the years I got into the habit of using the same weakish password for every website I registered on. This was OK for a while then one of the sites I use got its password hashes published and within a few days they were cracked and my password was there for all to see.&lt;/p&gt;

&lt;p&gt;I decided to do the sensible thing and create a strong, unique password for each site I use. The two problems I had are the same as everyone else:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;I wanted the passwords to be easy for me to remember but hard to crack&lt;/li&gt;
	&lt;li&gt;I wanted them to be easy to enter on my phone&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The second design goal was the one which made my approach slightly different to other ones you see around.&lt;/p&gt;

&lt;p&gt;Here’s how I make my passwords:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;To make a password that's unique for every site you need to incorporate some attribute of that site into the password&lt;/li&gt;
	&lt;li&gt;If you have multiple accounts on the site, each should have a different password. So your algorithm needs to take account of your identity too.&lt;/li&gt;
	&lt;li&gt;The password must be long enough to be strong but short enough to enter on a phone keyboard&lt;/li&gt;
	&lt;li&gt;The password should only use the characters available unmodified on your phone keyboard (it's too painful to keep changing the keyset for me)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The characters I have available on my Android phone are the lowercase letters a-z and the punctuation keys “,”, “.” and space. Your phone may be different.&lt;/p&gt;

&lt;p&gt;Here are the components of my password:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;A word that's memorable to me, let's say &quot;fart&quot;&lt;/li&gt;
	&lt;li&gt;Some letters from the website's domain name&lt;/li&gt;
	&lt;li&gt;Some letters from my email address&lt;/li&gt;
	&lt;li&gt;Some mandatory punctuation&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;An example. Let’s say I’m signing up to Facebook with the email address dominic@sayers.cc&lt;/p&gt;

&lt;p&gt;My password would be &lt;code&gt;fart fcbk ae.. ,,&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;It’s made up as follows&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;My memorable word, &quot;fart&quot;&lt;/li&gt;
	&lt;li&gt;A space&lt;/li&gt;
	&lt;li&gt;The consonants from the web site's domain name, padded out to a length of 4 by full stops.&lt;/li&gt;
	&lt;li&gt;A space&lt;/li&gt;
	&lt;li&gt;The vowels from the domain name of my email address, padded out to a length of 4 by full stops&lt;/li&gt;
	&lt;li&gt;Some punctuation; a space followed by two commas.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So my password is 17 characters long: not perfect but strong enough for today’s brute force attacks. It uses all the keyspace available without fiddling around on my phone’s keyboard. It’s unique for every account on every website (barring coincidences). It’s easy to remember.&lt;/p&gt;

&lt;p&gt;You can obviously vary these elements considerably to suit yourself. For instance you could use the last four letters in the website’s name, maybe reversed or something. Rearrange the elements I’ve used.&lt;/p&gt;

&lt;p&gt;This isn’t my actual algorithm, by the way. Just a little bit like it.&lt;/p&gt;

&lt;p&gt;Notes:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Please don't tell me about the &lt;a href=&quot;https://www.explainxkcd.com/wiki/index.php/Password_Strength&quot; target=&quot;_blank&quot;&gt;XKCD cartoon&lt;/a&gt;. I know about it. I'm not going to type in a 28-character password on my phone.&lt;/li&gt;
	&lt;li&gt;A password using this algorithm doesn't lend itself to dictionary attacks or even rainbow table attacks. A brute force attack using today's hardware would take an inordinate amount of time according to this chart:&lt;/li&gt;
&lt;/ol&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;https://arstechnica.com/security/2012/08/passwords-under-assault/4/&quot;&gt;&lt;img class=&quot;aligncenter&quot; title=&quot;Brute force attack time by password length&quot; src=&quot;https://cdn.arstechnica.net/wp-content/uploads/2012/08/exponential-wall2-640x398.png&quot; alt=&quot;&quot; width=&quot;480&quot; height=&quot;299&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Getting online</title>
   <link href="https://example.com/getting-online/"/>
   <updated>2012-04-11T13:48:44+01:00</updated>
   <id>https://example.com/getting-online</id>
   <content type="html">&lt;p&gt;&lt;em&gt;I’ve been asked a few times recently for general advice about getting a new business or project online. Here’s the skinny.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Any new business or project is going to need an online presence. So you just need to go and register a domain with GoDaddy, right? Stop! First read this handy guide to how to get it right.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;You need three basic things&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;A registered name&lt;/li&gt;
	&lt;li&gt;A way of telling the internet where your services are hosted&lt;/li&gt;
	&lt;li&gt;Hosting for your services (web site and email at least)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;When you register a domain name, the registrar will want to do &lt;em&gt;all&lt;/em&gt; these things for you. That way they get to keep all your money. But there are good reasons for keeping everything separate. Now read on…&lt;/p&gt;
&lt;h1&gt;Choosing a name&lt;/h1&gt;
&lt;p&gt;It’s fun choosing your name, but it’s not easy these days because all the good ones have already been taken. Here’s some things to consider that you might not have thought of:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;strong&gt;A .com domain name.&lt;/strong&gt;
D'oh!  Of course you thought of that. But if you didn't then you should. Plenty of people will try the .com version of your name even if you register it somewhere else.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;A domain name in another top level domain.&lt;/strong&gt;
If you plan to allow users to make comments on your web site or even to upload files then consider having an alternate domain name that is not subject to US laws.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;A Twitter handle.&lt;/strong&gt;
Twitter is pretty crowded these days and getting your name as a Twitter handle will not be easy. And Twitter doesn't have a secondary market in handles so you can't make someone else an offer for theirs..&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Registering your name&lt;/h1&gt;
&lt;p&gt;You need to tell the gods of the internet that you have chosen your name. You do this through a &lt;em&gt;registrar&lt;/em&gt;. Many companies will act as a registrar for you because it’s money for old rope. They will also offer you other services like hosting and email. Here’s why you shouldn’t use the same company for everything.&lt;/p&gt;

&lt;p&gt;Your domain names are your branding (and your trademark if you register it). It’s your identity and you should keep tight control of it. If you were a big company then your domain names would be under the control of your legal or marketing department, not your techies. If you outsource your web development, for example, you don’t want the developers owning your brand - what if you fall out with them?&lt;/p&gt;

&lt;p&gt;So register the domain names yourself, but don’t buy any other services from the registrar. &lt;strong&gt;Keep the credentials for your account at the registrar very safe. Nobody else needs to know them except you.&lt;/strong&gt; Ever. If they say they do then they are trying to rip you off.&lt;/p&gt;

&lt;p&gt;My recommended registrar: &lt;a href=&quot;https://www.gandi.net/no-bullshit&quot; target=&quot;_blank&quot;&gt;Gandi&lt;/a&gt;. Many countries have appalling internet legislation that compels internet service providers to pull your domain on the say-so of law enforcement agencies. France, where Gandi are domiciled, is no exception. But Gandi at least have a policy of &lt;a href=&quot;https://www.gandibar.net/post/2010/12/20/US-Data-Center-Open-for-Business#c179053&quot; target=&quot;_blank&quot;&gt;pushing back&lt;/a&gt; when asked to do something that is not in the customer’s interest. GoDaddy, on the other hand, are happy to hand over your data and your domain to the US security services at the request of a junior officer.&lt;/p&gt;

&lt;p&gt;You’ll also need to register a &lt;strong&gt;Twitter handle&lt;/strong&gt;. To do this you’ll need an email address, so let’s defer this until we’ve got our domain email services working. Registering a Twitter handle is easy: you’re just creating a Twitter account in the normal way.&lt;/p&gt;
&lt;h1&gt;Hosting your services&lt;/h1&gt;
&lt;p&gt;It’s no good having a domain name unless you use it for something. Here’s some of the services you might use it for:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;&lt;strong&gt;Email&lt;/strong&gt;
You'll probably want email addresses at your domain (you@yourdomain.com). The easiest way to do this is &lt;a href=&quot;https://www.google.com/apps/intl/en-GB/group/index.html&quot; target=&quot;_blank&quot;&gt;Google Apps&lt;/a&gt;. To complete the setup of Google Apps you'll need to verify that the domain is yours - we'll cover this in the following section about the Domain Name System. When you've got your email accounts set up, don't forget to go and register your Twitter handle.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Website or web application&lt;/strong&gt;
Traditionally your website would be hosted by a provider that gave you access to a virtual machine. On this machine would be a web server and you could simply upload HTML or PHP pages to create your site. The problem with this way of doing things is that it's fiddly to keep track of what you uploaded and when. This model has been replaced somewhat by the idea of an application server. Providers like &lt;a href=&quot;https://www.heroku.com/&quot; target=&quot;_blank&quot;&gt;Heroku&lt;/a&gt; or &lt;a href=&quot;https://appfog.com/&quot; target=&quot;_blank&quot;&gt;AppFog&lt;/a&gt; will link to your web developer's source code control systems to create more effective release control system.&lt;/li&gt;
	&lt;li&gt;&lt;strong&gt;Blog&lt;/strong&gt;
Your blog is just another application, hosted by an application server. There are many companies that will do this for you. I happen to use &lt;a href=&quot;https://wordpress.org/&quot; target=&quot;_blank&quot;&gt;Wordpress software&lt;/a&gt; hosted on my own old-fashioned virtual server. But &lt;a href=&quot;https://en.wordpress.com/signup/&quot; target=&quot;_blank&quot;&gt;Wordpress&lt;/a&gt; as a company will host your blog for you if you want.&lt;/li&gt;
&lt;/ol&gt;
&lt;h1&gt;Tying the bits together&lt;/h1&gt;
&lt;p&gt;As it stands we’ve got a domain name (good) and email addresses like phil@yourdomain.com.test-google-a.com (bleugh!) and maybe a website at https://yourdomain.herokuapp.com (yuk!)&lt;/p&gt;

&lt;p&gt;This isn’t what we want. We want emails like phil@yourdomain.com and our website to be at https://yourdomain.com - how do we do this?&lt;/p&gt;

&lt;p&gt;The thing we need is the Domain Name System (DNS). Your domain has name servers. These servers tell the internet where your own services are located. It’s a bit of internet plumbing that we need to use to tie it all together. Bear with me, it’s not that hard.&lt;/p&gt;

&lt;p&gt;I recommend using &lt;a href=&quot;https://www.cloudflare.com/&quot; target=&quot;_blank&quot;&gt;Cloudflare&lt;/a&gt; for your name servers. They are specialists at this and they do a free account that gives you all your basic needs, plus a lot of extra value on top. The Cloudflare account setup gives you all the help you need to get your services running on the right domain names.&lt;/p&gt;

&lt;p&gt;When you’ve been through the Cloudflare setup you’ll understand it a lot more. But the basic steps are:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Tell the DNS where your web hosts are&lt;/li&gt;
	&lt;li&gt;Tell the DNS where your mail servers are&lt;/li&gt;
	&lt;li&gt;Tell your registrar who is running your name servers&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The last step is what achieves the important separation of responsibility between your registrar and your other service providers. It gives you the freedom to choose the best-of-breed hosting provider, email provider and DNS provider. You don’t have to be tied to your registrar for these services any more.&lt;/p&gt;

&lt;p&gt;If you’re using Google Apps, the final step is to verify to Google that you own the domain. Google Apps setup will help you through this, but it’s very easy with Cloudflare to set up a TXT record containing information provided by Google. You’ll see what I mean when you try it.&lt;/p&gt;

&lt;p&gt;Comments and suggestions appreciated.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Internet domains 101</title>
   <link href="https://example.com/internet-domains-101/"/>
   <updated>2012-02-01T12:35:35+00:00</updated>
   <id>https://example.com/internet-domains-101</id>
   <content type="html">&lt;p&gt;Sometimes I help people out with web servers, email servers and other internet-related stuff. I often have to explain how we control what happens when you type in &lt;em&gt;www.example.com&lt;/em&gt; or &lt;em&gt;whoever@example.com&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Here’s my simple guide to how internet domains work.&lt;/p&gt;
&lt;h3&gt;Name resolution&lt;/h3&gt;
&lt;p&gt;When you type &lt;em&gt;www.example.com&lt;/em&gt; into a web browser, how does it know where to go to get the web page? As many people know, the answer is the &lt;a href=&quot;https://en.wikipedia.org/wiki/Domain_Name_System&quot; target=&quot;_blank&quot;&gt;DNS&lt;/a&gt; system. This translates &lt;em&gt;www.example.com&lt;/em&gt; into the address of a web server. More mysterious stuff happens to connect your browser to that address, but we don’t need to know about that today.&lt;/p&gt;

&lt;p&gt;Your domain has a set of DNS records that say where on the internet your domain’s resources (email servers, web servers etc.) actually live. You can change these records yourself, it’s quite easy.&lt;/p&gt;
&lt;h3&gt;Resource records&lt;/h3&gt;
&lt;p&gt;Here are the DNS resource records you might need to change:&lt;/p&gt;

&lt;p&gt;Address records (&lt;strong&gt;A&lt;/strong&gt;): If your web server is at the internet address &lt;em&gt;192.0.43.10&lt;/em&gt;, for example, then you need to create an A record for &lt;em&gt;www.example.com&lt;/em&gt; that points to that address.&lt;/p&gt;

&lt;p&gt;Synonyms (&lt;strong&gt;CNAME&lt;/strong&gt;): If there’s a resource on a server that already has a name then you can simply tell the DNS that your resource is on the same server. This is how Google Apps creates a webmail site at &lt;em&gt;mail.example.com&lt;/em&gt;; you simply create a CNAME record that points &lt;em&gt;mail.example.com&lt;/em&gt; at &lt;em&gt;ghs.google.com.&lt;/em&gt;. That’s all you have to know.&lt;/p&gt;

&lt;p&gt;Mail servers (&lt;strong&gt;MX&lt;/strong&gt;): Your email is transferred by mail servers. These are the servers that actually move mail around (not to be confused with your webmail site). For Google Apps mail, the settings for the MX records are specified in &lt;a href=&quot;https://support.google.com/a/bin/answer.py?hl=en&amp;amp;answer=174125&quot; target=&quot;_blank&quot;&gt;Google Apps help pages&lt;/a&gt;.&lt;/p&gt;
&lt;h3&gt;Domain registration &amp;amp; name servers&lt;/h3&gt;
&lt;p&gt;Where are &lt;em&gt;your&lt;/em&gt; DNS records kept? This is determined by the domain’s registration setup.&lt;/p&gt;

&lt;p&gt;When you first registered the domain you will have used a registrar like GoDaddy or Network Solutions (or &lt;a href=&quot;https://www.gandi.net/no-bullshit&quot; target=&quot;_blank&quot;&gt;Gandi&lt;/a&gt;, the registrar I recommend). For an annual fee this company will maintain your domain’s existence on the internet and one other thing: determine where the domain’s name servers are (the name servers hold the DNS records).&lt;/p&gt;

&lt;p&gt;When you first registered the domain, the registrar will have used their own name servers for your domain. This is to make it easy for you, but also because they are control freaks.&lt;/p&gt;

&lt;p&gt;This is important. Many registrars try to hide the fact that &lt;strong&gt;you don’t have to use their name servers&lt;/strong&gt;. In fact there are advantages in using a separate DNS provider from your registrar:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;The domain registration should be managed by your organisation's legal or administrative department. This is the master key: in the event of a problem then the name servers can simply be changed to regain control of the domain.&lt;/li&gt;
	&lt;li&gt;Management of the DNS records can be delegated to a technical person, but it's really not difficult to do this yourself.&lt;/li&gt;
	&lt;li&gt;Specialist DNS service providers often add extra value: for instance &lt;a href=&quot;https://www.cloudflare.com/&quot;&gt;Cloudflare&lt;/a&gt; will cache your web content and speed up web access for all your users.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;So in a nutshell:&lt;/p&gt;
&lt;ol&gt;
	&lt;li&gt;Your domain is registered with a registrar. Your account at the registrar controls where the domain's name servers are.&lt;/li&gt;
	&lt;li&gt;The name servers manage the DNS records for the domain. You should have a separate account with a DNS service provider to manage them.&lt;/li&gt;
	&lt;li&gt;Your web server will be controlled by an A record in the DNS setup.&lt;/li&gt;
	&lt;li&gt;Your webmail server will be controlled by a CNAME record in the DNS setup.&lt;/li&gt;
	&lt;li&gt;Your mail servers will be specified by MX records in the DNS setup.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If this isn’t clear please leave a comment.&lt;/p&gt;
</content>
 </entry>
 
</feed>
